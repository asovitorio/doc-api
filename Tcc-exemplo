üìñ Exemplo de Se√ß√£o do TCC (ABNT com prints do Swagger)

3.3 Documenta√ß√£o da API

A documenta√ß√£o da API √© um recurso fundamental para a compreens√£o e utiliza√ß√£o dos servi√ßos disponibilizados pelo sistema. Por meio dela, √© poss√≠vel visualizar os endpoints dispon√≠veis, os m√©todos de acesso (GET, POST, PUT, DELETE), os par√¢metros aceitos, os modelos de dados de entrada e sa√≠da, bem como os c√≥digos de resposta retornados pelo servidor.

Para este projeto, foi utilizada a ferramenta Swagger UI, que permite a visualiza√ß√£o da documenta√ß√£o de forma interativa, al√©m de possibilitar a execu√ß√£o de requisi√ß√µes de teste diretamente na interface.

Conforme ilustrado na Figura 1, a interface do Swagger UI apresenta todos os endpoints da aplica√ß√£o, organizados por recurso.

<br>  Figura 1 ‚Äì Interface do Swagger UI com os endpoints da API de Filmes
(inserir print da tela inicial do Swagger UI com a lista de endpoints)

<br>  Na Figura 2, observa-se um endpoint expandido (GET /filmes), que apresenta os par√¢metros de entrada, o modelo de resposta e os c√≥digos HTTP que podem ser retornados.

<br>  Figura 2 ‚Äì Detalhamento do endpoint GET /filmes no Swagger UI
(inserir print mostrando o endpoint expandido e um exemplo de resposta JSON)

<br>  A Figura 3 demonstra o funcionamento de uma requisi√ß√£o de cadastro de filme, utilizando o m√©todo POST /filmes. √â poss√≠vel verificar o corpo da requisi√ß√£o (em formato JSON), contendo os dados a serem cadastrados, e o exemplo da resposta de sucesso.

<br>  Figura 3 ‚Äì Cadastro de filme via Swagger UI (POST /filmes)
(inserir print com o corpo da requisi√ß√£o e resposta 201 ‚Äì Created)

<br>  Al√©m dos endpoints, o Swagger UI permite a visualiza√ß√£o dos schemas que definem a estrutura dos objetos utilizados. Na Figura 4, tem-se a representa√ß√£o do objeto Filme, que corresponde diretamente √† tabela do banco de dados j√° descrita no dicion√°rio de dados.

<br>  Figura 4 ‚Äì Estrutura do schema Filme no Swagger UI
(inserir print da aba de schemas mostrando a defini√ß√£o de Filme)

<br>  3.3.1 Integra√ß√£o com os Artefatos do Projeto

A documenta√ß√£o da API est√° diretamente relacionada aos demais artefatos desenvolvidos no projeto:

O DER serviu como base conceitual para identificar as entidades que originaram os recursos da API.

O dicion√°rio de dados forneceu os atributos necess√°rios para a defini√ß√£o dos schemas.

Os comandos DDL/DML serviram de refer√™ncia para a implementa√ß√£o das opera√ß√µes CRUD representadas nos endpoints.


Dessa forma, a documenta√ß√£o cumpre um papel essencial de integra√ß√£o e padroniza√ß√£o, funcionando como contrato entre o backend e os demais sistemas que ir√£o consumir os servi√ßos implementados.



